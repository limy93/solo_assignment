from behave import given, when, then
from django.urls import reverse
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait

@given('I am on the registration page')
def step_impl(context):
    context.browser.get('http://127.0.0.1:8000/register')
    assert "Register" in context.browser.title

@when('I enter valid registration details')
def step_impl(context):
    context.browser.find_element_by_name('username').send_keys('testuser')
    context.browser.find_element_by_name('email').send_keys('testuser@example.com')
    context.browser.find_element_by_name('password1').send_keys('complexpassword123')
    context.browser.find_element_by_name('password2').send_keys('complexpassword123')

@when('I submit the registration form')
def step_impl(context):
    context.browser.find_element_by_CSS_SELECTOR('form').submit()

@then('I should be registered and logged in')
def step_impl(context):
    WebDriverWait(context.browser, 10).until(
        EC.presence_of_element_located((By.ID, "dashboard-content")),
        message="Dashboard was not reached after registration."
    )

    assert "Dashboard" in context.browser.find_element(By.CSS_SELECTOR, "#dashboard-content h1").text
    
# Clean up the test user after the test completes
def after_scenario(context, scenario):
    if User.objects.filter(username='testuser').exists():
        User.objects.get(username='testuser').delete()